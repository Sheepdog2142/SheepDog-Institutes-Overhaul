@PART[USBasicMicroSatWedge]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
    @RESOURCE[ElectricCharge]
	{
		@amount = 300
		@maxAmount = 300
	}
    @MODULE[USDecouple]
    {
    @ejectionForce = 18
    }
	MODULE
	{
		name = ModuleSAS
		SASServiceLevel = 1
	}
}

@PART[USAdvancedMicroSatWedge]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
        @RESOURCE[ElectricCharge]
	{
		@amount = 1000
		@maxAmount = 1000
	}

    @MODULE[USDecouple]
{
    @ejectionForce = 18
}    

    // Existing solar switch module
    MODULE
    {
        name = USSolarSwitch
        SwitchID = 0
        isTracking = false
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
    
        isBreakable = false
        resourceName = ElectricCharge
        chargeRate = 1.8  // This value is used by the custom panel switch
        AddedCost = 0
        AddedPanelMass = 0
        IsActive = true
        IsFixed = true
        toggleSolarPanelEventGUIName = Toggle Solar Panels
    }

    // Adding Kerbalism emitter module for solar panels
    MODULE
    {
        name = ModuleKerbalismEmitter
        type = solar_panel
        power = 1.8  // Chargerate slightly lower so the satalite cannnot be perminant
        sunTracking = false  // This matches your "isTracking = false" setting
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
        resourceName = ElectricCharge
    }
}

@PART[USSingleProbeCore]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
	@RESOURCE[ElectricCharge]
	{
		@amount = 100 
		@maxAmount = 100
	}

}

@PART[USDoubleProbeCore]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
	@RESOURCE[ElectricCharge]
	{
		@amount = 50
		@maxAmount = 50
	}

}


@PART[USAdaptorShroud0625]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
    MODULE
    {

     MODULE
     {
        name = ModuleKerbalismEmitter
        type = solar_panel
        power = 1.4  // Same as charge rate
        sunTracking = false
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
        resourceName = ElectricCharge
     }

    }
}

@PART[USAdaptorShroud1250]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
    MODULE
    {
        name = ModuleKerbalismEmitter
        type = solar_panel
        power = 4  // Same as charge rate
        sunTracking = false
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
        resourceName = ElectricCharge
    }

}

@PART[USAdaptorShroud1250Soyuz]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
    MODULE
    {
        name = ModuleKerbalismEmitter
        type = solar_panel
        power = 4  // Same as charge rate
        sunTracking = false
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
        resourceName = ElectricCharge
    }

}

@PART[USAdaptorShroud1500]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
    MODULE
    {
        name = ModuleKerbalismEmitter
        type = solar_panel
        power = 4  // Same as charge rate
        sunTracking = false
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
        resourceName = ElectricCharge
    }

}

@PART[USAdaptorShroud1875]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
    MODULE
    {
        name = ModuleKerbalismEmitter
        type = solar_panel
        power = 7  // Same as charge rate
        sunTracking = false
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
        resourceName = ElectricCharge
    }

}

@PART[USCylindricalShroud250]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{

    MODULE
    {
        name = ModuleKerbalismEmitter
        type = solar_panel
        power = 4  // Same as charge rate
        sunTracking = false
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
        resourceName = ElectricCharge
    }
}

@PART[USCylindricalShroud1500]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{

    MODULE
    {
        name = ModuleKerbalismEmitter
        type = solar_panel
        power = 4  // Same as charge rate
        sunTracking = false
        secondaryTransformName = sunCatcher
        solarMeshTransformName = Solar
        resourceName = ElectricCharge
    }

}
