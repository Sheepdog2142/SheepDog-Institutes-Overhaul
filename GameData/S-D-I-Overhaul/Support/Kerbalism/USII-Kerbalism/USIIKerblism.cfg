// Add new experiments to the relevant parts

@PART[USBasicMicroSatWedge]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{

	!MODULE:HAS[#experimentID[geigerCounter]]	{}
	MODULE
	{
		name = Experiment
		experiment_id = geigerCounter
	}

	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = radiation
	}
	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = temperature
	}
}

@PART[USAdvancedMicroSatWedge]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{

	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = radiation
	}
	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = gravioli
	}
	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = temperature
	}	

}

// Fluid Spectrometer Setup and atmospheric experiments

@PART[USFluidSpectroWedge]:NEEDS[FeatureScience]:FIRST
{

	MODULE
	{
		name = Configure
		title = Atmospheric Science
	}
	MODULE
	{
		name = Configure
		title = Underwater Science
	}
	MODULE
	{
		name = Configure
		title = Spectro Variometer Setup
		slots = 1
		
		SETUP
			{
				name = None
				desc = Empty slot for mass and cost savings, should you not require any instruments installed.
			}
		SETUP
			{
				name = Atmospheric Science
				desc =  Configures the part as a science instrument, allowing for a selection of atmospheric instruments.
				MODULE
				{
					type = Configure
					id_field = title
					id_value = Atmospheric Science
				}
			}
		SETUP
			{
				name = Underwater Science
				desc =  Configures the part as a science instrument, allowing for a selection of underwater experiments.
				MODULE
				{
					type = Configure
					id_field = title
					id_value = Underwater Science
				}
			}
	}
}

// Orbital Scanner Config for Satellite Wedges

@PART[USBasicMicroSatWedge]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
    !MODULE[ModuleScienceExperiment]:HAS[#experimentID[UStemperatureScan]] {}
	!MODULE[ModuleScienceExperiment]:HAS[#experimentID[USbarometerScan]] {}
}

@PART[USAdvancedMicroSatWedge]:NEEDS[FeatureScience]:FIRST
{
	MODULE
	{
		name = Configure
		title = Orbital Scanner
	}
}

@PART[USAdvancedMicroSatWedge]:NEEDS[DMagicOrbitalScience,FeatureScience]:AFTER[KerbalismDefault]
{
	// Remove the stock USSimpleScience module
	!MODULE[USSimpleScience]:HAS[#experimentID[dmSolarParticles]] {}

	// Add Kerbalism-compatible experiment
	MODULE
	{
		name = Experiment
		experiment_id = dmSolarParticles
		anim_deploy = LSubsatSolarLens  // Matches the stock animation
		data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSolarParticles/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSolarParticles/duration$
		ec_rate = 0.0
		allow_shrouded = False
		sample_collecting = True
	}
}

@PART[USAdvancedMicroSatWedge]:NEEDS[FeatureScience,Kerbalism]:AFTER[KerbalismDefault]
{
	// Remove the stock USSimpleScience module for the camera
	!MODULE[USSimpleScience]:HAS[#experimentID[USCameraPicture]] {}

	// Add Kerbalism-compatible camera experiment
	MODULE
	{
		name = Experiment
		experiment_id = USCameraPicture
		anim_deploy = LSubsatSolarLens  // Set the animation to match the stock one
		data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/duration$
		// Scale the data rate based on the part's mass
		@data_rate *= #$../mass$
		ec_rate = 2.5  // Set energy consumption
		@ec_rate *= #$../mass$
		allow_shrouded = False
	}

	// Ensure Kerbalism experiment values are used
	@EXPERIMENT_DEFINITION:HAS[#id[USCameraPicture]]:NEEDS[FeatureScience,Kerbalism]
	{
		@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/value$
		@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/size$
		@dataScale /= #$baseValue$

		KERBALISM_EXPERIMENT
		{
			VirtualBiome = NorthernHemisphere
			VirtualBiome = SouthernHemisphere
			Situation = Space@VirtualBiomes
		}
	}
}	

@PART[USAdvancedMicroSatWedge]:NEEDS[FeatureScience,Kerbalism]:AFTER[KerbalismDefault]
{
	// Remove the stock USSimpleScience module for the magnetometer
	!MODULE[USSimpleScience]:HAS[#experimentID[USmagnetometer]] {}

	// Add the Kerbalism-compatible experiment for the magnetometer
	MODULE
	{
		name = Experiment
		experiment_id = magnetometer
		anim_deploy = LSubsatMag  // Set the animation to match the stock one
		data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/magnetometer/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/magnetometer/duration$
		// Scale the data rate based on the part's mass
		@data_rate *= #$../mass$
		ec_rate = 1.0  // Set energy consumption
		@ec_rate *= #$../mass$
		allow_shrouded = False
		rerunnable = True
		usageReqMaskInternal = 1
		usageReqMaskExternal = -1
		interactionRange = 1.5
	}

	// Ensure that the experiment links to the animation state properly
	@MODULE[Experiment]:HAS[#experiment_id[magnetometer]]
	{
		%anim_deploy = LSubsatMag  // Ensure the experiment uses this animation
		allowManualAnimation = true  // Allow manual toggling of the animation
	}

	// Remove any existing ModuleAnimateGeneric and ModuleDeployablePart to avoid conflicts
	!MODULE[ModuleAnimateGeneric] {}
	!MODULE[ModuleDeployablePart] {}

	// Add a manual animation toggle for the magnetometer boom
	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = LSubsatMag  // This matches the animation used by the Experiment module
		startEventGUIName = Deploy Magnetometer Boom
		endEventGUIName = Retract Magnetometer Boom
		actionGUIName = Toggle Magnetometer Boom
		allowManualControl = true
		defaultActionGroup = 0
	}
}

@PART[USMapCamWedge]:NEEDS[FeatureScience]:FIRST
{
    MODULE
    {
        name = Configure
        title = Orbital Scanner
    }
    MODULE
    {
        name = Experiment
        experiment_id = dmReconScan
    }
    MODULE
    {
        name = Experiment
        experiment_id = KerbalismResourceScanner
    }
}

@PART[US*]:HAS[@MODULE[Experiment]]:NEEDS[FeatureScience]:FOR[KerbalismDefault]
{
    @MODULE[Experiment]:HAS[#experiment_id[dmReconScan]]
    {
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/duration$
        @data_rate *= #$../mass$
        ec_rate = 2.5
        @ec_rate *= #$../mass$
        allow_shrouded = False
    }

    @MODULE[Experiment]:HAS[#experiment_id[KerbalismResourceScanner]]
    {
        data_rate = #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/size$
        @data_rate /= #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/duration$
        ec_rate = #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/ECCost$
        requires = #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/requirements$
        allow_shrouded = false
    }

    @MODULE[Experiment]:HAS[#experiment_id[infraredTelescope]]
    {
        %ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/ECCost$
        %data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/duration$
        %requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/requirements$
        %resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/ResourceRates$
    }
}
